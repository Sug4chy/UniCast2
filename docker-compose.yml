services:
  telegram-bot:
    image: sug4chy/unicast-telegram-bot
    environment:
      ASPNETCORE_ENVIRONMENT: Staging
      TelegramBot__Token: ${TelegramBot__Token}
      TelegramBot__Username: ${TelegramBot__Username}
      ConnectionStrings__DefaultConnection: ${ConnectionStrings__DefaultConnection}
      Moodle__BaseUrl: ${Moodle__BaseUrl}
      WEBHOOK_CERTIFICATE_PATH: "/certificates/public.pem"
    restart: on-failure
    volumes:
      - ./certificates.public.pem/:/certificates/public.pem
    depends_on:
      nginx:
        condition: service_started
      db:
        condition: service_healthy
    networks:
      - uni-cast-network

  internal-api:
    image: sug4chy/unicast-internal-api
    ports:
      - "5236:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Staging
      TelegramBot__Token: ${TelegramBot__Token}
      TelegramBot__Username: ${TelegramBot__Username}
      ConnectionStrings__DefaultConnection: ${ConnectionStrings__DefaultConnection}
    restart: on-failure
    networks:
      - uni-cast-network
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES__USER}
      POSTGRES_PASSWORD: ${Postgres__Password}
      POSTGRES_DB: ${Postgres__DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "postgres" ]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - uni-cast-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

  nginx:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certificates:~/certificates
    networks:
      - uni-cast-network
    ports:
      - "8443:443"

volumes:
  postgres-data:

networks:
  uni-cast-network:
    driver: bridge